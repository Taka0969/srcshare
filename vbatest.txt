Sub GetEmptyHobbyRows_B2()Dim wb As WorkbookDim ws As WorksheetDim startRow As Long, startCol As LongDim lastRow As Long, lastCol As LongDim dataArr As VariantDim resultArr() As VariantDim i As Long, j As LongDim cnt As LongDim hobbyCol As LongDim outAry As VariantDim delstartRow As Long ' 削除開始行Dim delstartCol As Long ' B列Dim delendCol As Long ' H列Dim dellastRow As LongDim colName As String    ' 氏名"Dim colAddress As String       ' 住所Dim colPostalCode As String    ' 郵便番号Dim colPhone As String         ' 電話番号Dim colEmail As String         ' メールアドレスDim colBirthDate As String     ' 生年月日Dim colHobby As String         ' 趣味Dim MySheet As WorksheetcolName = 1colAddress = 2colPostalCode = 3colPhone = 4colEmail = 5colBirthDate = 6colHobby = 7'表示順outAry = Array(colHobby, colName, colAddress, colPostalCode, colPhone, colEmail, colBirthDate)' ===== 設定 =====startRow = 2 ' データ開始行startCol = 2 ' データ開始列（B列 = 2）hobbyCol = 7 ' 趣味列の列番号（データ上の列番号、氏名が1列目として数える）' ==============' ファイルのフルパスを指定（ここは絶対パスで）filePath = "/Users/taka0969/vba_work/excel_input/input.xlsx"  ' ★Macならこんな感じSet wbData = Workbooks.Open(FileName:=filePath, ReadOnly:=True)' データのあるシートを設定（例：1枚目）Set ws = wbData.Sheets("Sheet1")' 最終行と最終列（B2開始の範囲で）lastRow = ws.Cells(ws.Rows.Count, startCol).End(xlUp).RowlastCol = ws.Cells(startRow, ws.Columns.Count).End(xlToLeft).Column' データ範囲を配列に読み込みdataArr = ws.Range(ws.Cells(startRow, startCol), ws.Cells(lastRow, lastCol)).Value' 見出し＋抽出行を格納する配列を用意ReDim resultArr(1 To lastRow - startRow + 1, 1 To lastCol - startCol + 1)' 見出し行をコピーFor j = 1 To UBound(dataArr, 2)    resultArr(1, j) = dataArr(1, j)Next j' 趣味列が空白の行だけ抽出cnt = 1For i = 2 To UBound(dataArr, 1)    If Trim(dataArr(i, hobbyCol)) <> "" Then        cnt = cnt + 1        For j = 1 To UBound(dataArr, 2)            resultArr(cnt, j) = dataArr(i, j)        Next j    End IfNext i' データ取得が済んだら閉じるwbData.Close SaveChanges:=False'            ' 今日の日付を "YYYYMMDD" 形式で取得'            todayStr = Format(Date, "yyyymmdd")''            ' 結果Book2のパス'            filePathResult = "/Users/taka0969/vba_work/excel_out/out.xlsx"  ' ★適宜変更''            ' ===== Book2を開く or 新規作成 ====='            Set wbResult = Workbooks.Open(filePathResult)''            Set wsResult = wbResult.Sheets(1)'            wsResult.Name = "趣味空白除外リスト"' 抽出結果を新しいシートに貼り付け'    Dim newWs As Worksheet'    Set newWs = ThisWorkbook.Sheets.Add'    newWs.Name = "趣味空白リスト"sheetName = "抽出結果"' 同名シートが存在するか確認    For i = 1 To ThisWorkbook.Sheets.Count        If ThisWorkbook.Sheets(i).Name = sheetName Then            existFlg = True            Exit For        End If    Next i        ' 存在すれば削除（Alert非表示で）    If existFlg Then        Application.DisplayAlerts = False        ThisWorkbook.Sheets(sheetName).Delete        Application.DisplayAlerts = True    End If        ' 新しいシートを追加し、名前を設定    ThisWorkbook.Sheets.Add After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count) ' 一番最後に追加    ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count).Name = sheetName' UBoundは配列の行数を返す' 使い方は引数1い対称の配列引数2へ次元数'wsResult.Range("B2").Resize(cnt, UBound(dataArr, 2)).Value = resultArrThisWorkbook.Sheets(sheetName).Range("A1").Resize(cnt, UBound(dataArr, 2)).Value = resultArrMsgBox "趣味が空白のデータを " & (cnt - 1) & " 件 抽出しました。", vbInformation'削除開始処理    delstartRow = 4      ' 削除開始行    delstartCol = 2       ' B列    delendCol = 8 ' H列        ' 対象範囲の最終行（削除する範囲を決めるため）    dellastRow = ThisWorkbook.Sheets(sheetName).Cells(ThisWorkbook.Sheets(sheetName).Rows.Count, delstartCol).End(xlUp).Row    ' 削除開始行が最終行より大きい場合は何もしない    If delstartRow > dellastRow Then        MsgBox "指定行より下にデータはありません。"        Exit Sub    End If        ' 削除範囲を設定    Set delRange = ThisWorkbook.Sheets("Sheet1").Range(ThisWorkbook.Sheets("Sheet1").Cells(delstartRow, delstartCol), ThisWorkbook.Sheets("Sheet1").Cells(dellastRow, delendCol))        ' 内容削除    delRange.ClearContents' --- 出力 ---    With ThisWorkbook.Sheets("Sheet1")        ' 配列の行数ぶん繰り返し        For i = LBound(resultArr, 1) To UBound(resultArr, 1)            '電話番号項目を１列目へ表示            .Cells(i + 2, "B").Value = resultArr(i, outAry(0)) '3列目 → B2列から下へ            .Cells(i + 2, "C").Value = resultArr(i, outAry(1)) '1列目 → B3列から下へ            .Cells(i + 2, "D").Value = resultArr(i, outAry(2)) '1列目 → B3列から下へ            .Cells(i + 2, "E").Value = resultArr(i, outAry(3)) '1列目 → B3列から下へ            .Cells(i + 2, "F").Value = resultArr(i, outAry(4)) '1列目 → B3列から下へ            .Cells(i + 2, "G").Value = resultArr(i, outAry(5))  '1列目 → B3列から下へ            .Cells(i + 2, "H").Value = resultArr(i, outAry(6)) '1列目 → B3列から下へ        Next i    End With    End Sub